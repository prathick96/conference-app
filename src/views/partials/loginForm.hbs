<div class="container">
  <!-- Material form register -->
  <div class="card">

    <h5 class="card-header info-color white-text text-center py-4">
      {{formTitle}}
    </h5>
    <br>
    <!--Card content-->
    <div class="card-body px-lg-5 pt-0">

      <!-- Form -->
      <form id="signup-form" action="{{submitTarget}}" method="{{submitMethod}}">

        <div class="form-row">
          <div class="form-group col-6 col-3">
            <label for="firstName">First name</label>
            <input type="text" class="form-control" name="firstName" id="firstName" required>
          </div>
          <div class="form-group col-6 col-3">
            <label for="lastName">Last name</label>
            <input type="text" class="form-control" name="lastName" id="lastName" required>
          </div>
        </div>
        <div class="form-row">
          <legend class="col-form-label col-sm-2 pt-0 m-3">Gender</legend>
          <div class="form-group col-md-6 m-4">
            <div class="form-check form-check-inline pr-4">
              <input class="form-check-input" type="radio" name="gender" id="male" value="Male" required>
              <label class="form-check-label" for="male">Male</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="radio" name="gender" id="female" value="Female">
              <label class="form-check-label" for="female">Female</label>
            </div>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-6 m-3">
            <label for="profession">Profession</label>
            <select class="form-control" name="profession" id="profession" required>
              <option>IT</option>
              <option>Management</option>
              <option>Student</option>
              <option>ContentWriter</option>
            </select>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-3 m-3">
            <label for="experience">Years of Experience</label>
            <input type="text" class="form-control" name="experience" id="experience" placeholder="In numbers" required>
          </div>
          <div class="form-group col-md-3 m-3">
            <label for="inputCity">City</label>
            <input type="text" class="form-control" name="city" id="inputCity" required>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-12 col-lg-8 m-3">
            <label for="inputAddress">Address</label>
            <input type="text" class="form-control" name="address" id="inputAddress" required>
          </div>
        </div>
        <div class="form-row">
          <div class="form-group col-md-6">
            <label for="contact" class="col-4 col-form-label">Contact number</label>
            <div class="col-8">
              <input class="form-control" type="tel" name="contact" pattern=".{10}" id="contact" required>
            </div>
          </div>
        </div>
        <button type="submit" class="btn btn-primary btn-lg">Register</button>
      </form>

    </div>

  </div>

</div>
<script>
  const $loginForm = document.querySelector("#signup-form");

  $loginForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const contactForm = document.getElementById("contact");
    var regex = /^[6-9][0-9]{9}$/i;
    if (!regex.test(contactForm.value) || contactForm.value.length !== 10) {
      alert("Enter valid Indian mobile number with 10 digits");
      ContactForm.focus();
      return false;
    }

    const submitUrl = $loginForm.action;
    const submitMethod = $loginForm.method;
    const formData = new FormData($loginForm);
    let loginDetails = {};
    for (const fields of formData.entries()) {
      const [key, value] = fields;
      loginDetails[key] = value;
    }

    const config = {
      method: submitMethod.toUpperCase(),
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(loginDetails)
    }

    fetch(submitUrl, config)
      .then(response => {
        if (response.status === 200) {
          return response.json()
        } else {
          throw (new Error(response.status))
        }
      })
      .then((data) => {
        alert(data.message);
        window.location.href = "/chart"
      })
      .catch(error => {
        switch (error.message) {
          case "400":
            alert("Contact number aready exists");
            break;
          case "500":
            alert("Please Try after some time...");
            break;
          default:
            console.error(error);
        }
      })
  })
</script>